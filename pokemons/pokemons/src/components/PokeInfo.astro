---
interface Props {
    name: string;
    frontSprite: string;
    backSprite: string;
    id: number;
    abilities: string;
    type: string;
    stats: string;
}

const { name, frontSprite, backSprite, id, abilities, type, stats } =
    Astro.props;
const capitalizedName = name.charAt(0).toUpperCase() + name.slice(1);
const paddedId = id.toString().padStart(3, "0");
---

<div class="grid h-fit w-auto mx-auto rounded-lg flex flex-col m-1 p-1">
    <div class="flex justify-center">
        <div
            class="w-auto h-auto text-gray-800 rounded-lg border-2 p-3 border-yellow-500 flex flex-col items-center bg-red-600"
        >
            <div class="flex m-2 p-2 w-full justify-center">
                <img
                    src={frontSprite}
                    class="w-full bg-slate-200 rounded-lg m-2 p-2 border-2 border-black"
                    alt={capitalizedName}
                />
                <img
                    src={backSprite}
                    class="w-full bg-slate-200 rounded-lg m-2 p-2 border-2 border-black"
                    alt={capitalizedName}
                />
            </div>

            <span
                class="font-semibold text-white border-2 border-black rounded-md bg-green-800 w-full m-2 p-2 text-black text-justify text-sm"
            >
                ID: #{paddedId}<br />
                Name : {capitalizedName}<br />
                Abilities: {abilities}<br />
                Type(s): {type}<br />
                Stats:
                <ul>
                    {stats.split(", ").map((stat) => <li>{stat}</li>)}
                </ul>
            </span>
            <a
                href="/pokemons/1"
                class="text-center border-2 hover:font-bold border-black w-fit m-2 p-2 bg-slate-300 w-fit rounded-md"
            >
                <img src="./images/home.png" height="30" width="30" />
            </a>
        </div>
    </div>
</div>
